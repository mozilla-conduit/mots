version: 2.1

tags-only-filter: &tags-only-filter
  filters:
    tags:
      only: /.*/
    branches:
      ignore: /.*/

workflows:
  version: 2
  test:
    jobs:
      - test_3_8
      - test_3_9
      - test_3_10
      - test_3_11
      - test_3_12
      - test_3_13
  test-build-publish:
    jobs:
      - verify:
          <<: *tags-only-filter
      - test_3_8:
          <<: *tags-only-filter
          requires:
            - verify
      - test_3_9:
          <<: *tags-only-filter
          requires:
            - verify
      - test_3_10:
          <<: *tags-only-filter
          requires:
            - verify
      - test_3_11:
          <<: *tags-only-filter
          requires:
            - verify
      - test_3_12:
          <<: *tags-only-filter
          requires:
            - verify
      - test_3_13:
          <<: *tags-only-filter
          requires:
            - verify
      - build-and-publish:
          <<: *tags-only-filter
          requires:
            - test_3_8
            - test_3_9
            - test_3_10
            - test_3_11
            - test_3_12
            - test_3_13

jobs:
  test_3_8: &test_template
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: setup
          command: |
            set -e
            sudo apt-get update
            sudo apt-get install python3-venv
            mkdir -p /tmp/test-reports
            make dev-env
            source .mots-env/bin/activate
            make dev
      - run:
          name: run tests
          command: |
            set -e
            source .mots-env/bin/activate
            ulimit -c unlimited
            for F in tests/test_*.py; do
              pytest --junitxml=/tmp/test-reports/junit-$( basename $F .py ).xml -vv $F
            done
      - store_test_results:
          path: /tmp/test-reports
      - store_artifacts:
          path: /tmo/test-reports
  test_3_9:
    <<: *test_template
    docker:
        - image: cimg/python:3.9
  test_3_10:
    <<: *test_template
    docker:
        - image: cimg/python:3.10
  test_3_11:
    <<: *test_template
    docker:
        - image: cimg/python:3.11
  test_3_12:
    <<: *test_template
    docker:
        - image: cimg/python:3.12
  test_3_13:
    <<: *test_template
    docker:
        - image: cimg/python:3.13
  verify:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: setup
          command: |
            set -e
            pip install .
      - run:
          name: ci/cd checks and validations
          command: mots ci
  build-and-publish:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: setup
          command: |
            set -e
            sudo apt-get update
            sudo apt-get install python3-venv
            make clean
            make dev-env
            make dev
      - run:
          name: build distribution
          command: |
              set -e
              source .mots-env/bin/activate
              make build
      - run:
          name: test install outside of venv
          command: |
              set -e
              pip install dist/*.whl
      - run:
          name: publish to testpypi
          command: |
              set -e
              source .mots-env/bin/activate
              make publish-test
      - run:
          name: publish to pypi
          command: |
              set -e
              source .mots-env/bin/activate
              make publish
